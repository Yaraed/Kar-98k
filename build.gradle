// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "config.gradle"

buildscript {
    ext.kotlin_version = '1.3.21'
    ext.kotlinx_coroutines_core = '1.1.1'

    repositories {
        mavenCentral()
        google()
        jcenter()
//        maven { url 'https://plugins.gradle.org/m2/' }
//        maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
//        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
//        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
//        maven {
//            url 'http://192.168.3.217:8081/repository/maven-public/'
//            credentials {
//                username = "liufeng"
//                password = "android"
//            }
//
//        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.jakewharton:butterknife-gradle-plugin:10.1.0"
        classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.4'
        classpath 'com.mogujie.gradle:tinyPicPlugin:1.1.4'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }

}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "http://jitpack.io" }
//        maven {
//            url 'http://192.168.3.217:8081/repository/maven-public/'
//            credentials {
//                username = "liufeng"
//                password = "android"
//            }
//
//        }
    }

    subprojects {
        project.configurations.all {
            //每隔24小时检查远程依赖是否存在更新
            resolutionStrategy.cacheChangingModulesFor 24, 'hours'
            //每隔10分钟..
            //resolutionStrategy.cacheChangingModulesFor 10, 'minutes'
            // 采用动态版本声明的依赖缓存10分钟
            resolutionStrategy.cacheDynamicVersionsFor 10*60, 'seconds'

            resolutionStrategy.eachDependency { details ->
                if (details.requested.group == 'com.android.support'
                        && !details.requested.name.contains('multidex')) {
                    details.useVersion "28.0.0"
                } else if (details.requested.name.contains('multidex')) {
                    details.useVersion "2.0.0"
                } else if (details.requested.group == 'com.orhanobut') {
                    details.useVersion "2.2.0"
                } else if (details.requested.group == 'com.google.dagger') {
                    details.useVersion "2.12"
                } else if (details.requested.group == 'com.github.bumptech.glide') {
                    details.useVersion "4.8.0"
                } else if (details.requested.group == 'android.arch.core') {
                    details.useVersion "1.1.1"
                } else if (details.requested.group == 'android.arch.lifecycle') {
                    details.useVersion "1.1.1"
                } else if (details.requested.group == 'com.google.code.gson') {
                    details.useVersion "2.8.0"
                }
            }
        }
    }
    //忽略javadoc的检查
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
