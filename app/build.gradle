apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'tinyPIC'


def androidConfig = rootProject.ext.android
def libsConfig = rootProject.ext.libs

android {
    compileSdkVersion androidConfig.compileSdkVersion
    buildToolsVersion androidConfig.buildSdkVersion
    defaultConfig {
        applicationId androidConfig.applicationId
        minSdkVersion androidConfig.minSdkVersion
        targetSdkVersion androidConfig.targetSdkVersion
        versionCode androidConfig.versionCode
        versionName androidConfig.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }

        // 设置支持multidex
        multiDexEnabled true

        renderscriptTargetApi 21
        renderscriptSupportModeEnabled true

        ndk {
            abiFilters "armeabi-v7a"
        }

        flavorDimensions "default"
    }
//    productFlavors {
//        pro {
//            applicationId = androidConfig.applicationId + ".pro"
//        }
//        free {
//            applicationId = androidConfig.applicationId + ".free"
//        }
//    }
    buildTypes {
//        debug{
//            applicationIdSuffix ".debug"
//        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    /**
     * 防止mmkv和DoraemonKit，重复依赖libc++_shared.so包
     */
    packagingOptions {//加上这些代码
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/armeabi-v8a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.0-alpha1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation libsConfig.core_v7
    implementation libsConfig.appcompat_v7
    implementation libsConfig.constraintlayout
    implementation 'me.leolin:ShortcutBadger:1.1.22@aar'
    implementation 'com.zhihu.android:matisse:0.4.3'
    // 测试blur
    //implementation 'com.fivehundredpx:blurringview:1.0.0'
    // leakCanary
    debugImplementation libsConfig.canaryDebug
    releaseImplementation libsConfig.canaryRelease
    kapt libsConfig.dagger2Compiler
    kapt libsConfig.arouterCompiler

    implementation project(':a_ble')
    implementation project(':a_intent')
    implementation project(':a_http')
    implementation project(':a_gpuimage')
    implementation project(':a_pdf')
    implementation project(':a_service')
    implementation project(':a_jetpack')
    implementation project(':a_vlayout')
    implementation project(':poscore')

    // test
    implementation(libsConfig.glide) {
        exclude group: "com.android.support"
    }

    // test
    debugImplementation 'com.didichuxing.doraemonkit:doraemonkit:1.1.0'
    releaseImplementation 'com.didichuxing.doraemonkit:doraemonkit-no-op:1.1.0'
}

repositories {
    maven { url 'https://github.com/500px/500px-android-blur/raw/master/releases/' }
}

tinyinfo {
    apiKey = '4YrlKpNr3PrLNqyXCbS6nyxLkCd9Ywpk'
    //是否跳过此task
    //skip = true/false
    //是否打印日志
    //isShowLog = true/false
}
