apply plugin: 'com.android.library'

def androidConfig = rootProject.ext.android
def libsConfig = rootProject.ext.libs

android {
    compileSdkVersion androidConfig.compileSdkVersion
    defaultConfig {
        minSdkVersion androidConfig.minSdkVersion
        targetSdkVersion androidConfig.targetSdkVersion
        versionCode androidConfig.versionCode
        versionName androidConfig.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation libsConfig.testRunner
    androidTestImplementation libsConfig.testEspresso
    implementation libsConfig.appcompat_v7
    //  网络请求库
    implementation libsConfig.retrofit
    implementation libsConfig.retrofitConverterGson
    implementation libsConfig.retrofitConverterScalars
    implementation libsConfig.retrofitAdapterRxjava2
    implementation libsConfig.rxJava
    implementation libsConfig.rxAndroid
    implementation libsConfig.rxBinding
    implementation libsConfig.okhttp3
    implementation libsConfig.okhttp3LoggerInterceptor
    implementation libsConfig.okhttp3Urlconnection

    // 鉴于OKHTTP的网络缓存需要header的配合，每个接口需要去配置，比较麻烦,也不够灵活
    implementation libsConfig.rxCache

    implementation project(':middleware:weyeetoast')
    implementation project(':middleware:weyeelog')
    compileOnly project(':middleware:weyeeutil')
}

apply from : '../../maven.gradle'